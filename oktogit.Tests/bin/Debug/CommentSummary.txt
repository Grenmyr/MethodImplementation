        // Connection with authentication for github api.
        // List with C# repositories
        // List with JS repositories.
        // List of C# repositories that also has user that written repo in JS.
        // List of JS repositories that also has user that written repo in C#.
            //var github = new Octokit.GitHubClient(connection);
            //var query = new SearchRepositoriesRequest("application");
            //query.Language = Language.CSharp;
            //query.SortField = RepoSearchSort.Stars;
        // tom
        // Get all files in folder and subfolders that contain .cs as filending
        /// <summary>
        /// Main Method to analyze all files in filePaths array
        /// </summary>
            // Total lines scanned
            // Total amount of lines with comments // or /**/
            // Total amount of lines with comments // or /**/
            int totalCommentLines = 0;
            // Total length by char of all comments.
            int totalCommentsLength = 0;
            // Total mount of todo comments
            int todoComment = 0;
            using (TextWriter tw = new StreamWriter("CommentSummary.txt"))
            {
                // loop through all files
                foreach (var item in filePaths)
                {
                    // exclude all files that start with AssemblyInfo
                    if (!item.Contains("AssemblyInfo"))
                    {
                        string line;
                        using (StreamReader reader = new StreamReader(item))
                        {
                            while ((line = reader.ReadLine()) != null)
                            {
                                // Add one line for eatch line in file.
                                totalLines++;

                                if (line.Contains("//"))
                                {
                                    tw.WriteLine(line);
                                    totalCommentLines++;
                                    totalCommentsLength += line.Length;

                                    if (line.Contains("TODO"))
                                    {
                                        todoComment++;
                                    }

                                }

                                if (line.Contains("/*"))
                                {
                                    tw.WriteLine(line);
                                    totalCommentLines++;
                                    totalCommentsLength += line.Length;

                                    while ((line = reader.ReadLine()) != null)
                                    {

                                        tw.WriteLine(line);
                                        totalCommentLines++;
                                        totalCommentsLength += line.Length;
                                        if (line.Contains("*/")) { break; }

TOTAL LINES SCANNED
207
TOTAL COMMENTS LINES
64
AVERAGE COMMENTS CHARACTER LENGHT
45
TOTAL TODO COMMENTS
0
